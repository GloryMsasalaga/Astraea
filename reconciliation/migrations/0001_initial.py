# Generated by Django 4.2.7 on 2025-08-20 09:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import reconciliation.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BankRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('raw_data', models.JSONField(help_text='Original row data from CSV/Excel')),
                ('row_number', models.IntegerField(help_text='Row number in original file')),
                ('is_matched', models.BooleanField(default=False)),
                ('match_confidence', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['date', 'amount'],
            },
        ),
        migrations.CreateModel(
            name='LedgerRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('reference', models.CharField(blank=True, max_length=255, null=True)),
                ('account', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('raw_data', models.JSONField(help_text='Original row data from CSV/Excel')),
                ('row_number', models.IntegerField(help_text='Row number in original file')),
                ('is_matched', models.BooleanField(default=False)),
                ('match_confidence', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['date', 'amount'],
            },
        ),
        migrations.CreateModel(
            name='ReconciliationSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('created', 'Created'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='created', max_length=20)),
                ('ledger_file', models.FileField(upload_to=reconciliation.models.reconciliation_upload_path)),
                ('bank_statement_file', models.FileField(upload_to=reconciliation.models.reconciliation_upload_path)),
                ('date_tolerance_days', models.IntegerField(default=0, help_text='Days tolerance for date matching')),
                ('amount_tolerance', models.DecimalField(decimal_places=2, default=0.0, help_text='Amount tolerance for matching', max_digits=10)),
                ('total_ledger_records', models.IntegerField(default=0)),
                ('total_bank_records', models.IntegerField(default=0)),
                ('matched_records', models.IntegerField(default=0)),
                ('unmatched_ledger_records', models.IntegerField(default=0)),
                ('unmatched_bank_records', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reconciliation_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReconciliationException',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('exception_type', models.CharField(choices=[('unmatched_ledger', 'Unmatched Ledger Record'), ('unmatched_bank', 'Unmatched Bank Record'), ('duplicate_match', 'Duplicate Match'), ('amount_discrepancy', 'Amount Discrepancy'), ('date_discrepancy', 'Date Discrepancy'), ('other', 'Other')], max_length=30)),
                ('status', models.CharField(choices=[('open', 'Open'), ('resolved', 'Resolved'), ('ignored', 'Ignored')], default='open', max_length=20)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=20)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bank_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exceptions', to='reconciliation.bankrecord')),
                ('ledger_record', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='exceptions', to='reconciliation.ledgerrecord')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_exceptions', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exceptions', to='reconciliation.reconciliationsession')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='ledgerrecord',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ledger_records', to='reconciliation.reconciliationsession'),
        ),
        migrations.AddField(
            model_name='bankrecord',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_records', to='reconciliation.reconciliationsession'),
        ),
        migrations.CreateModel(
            name='TransactionMatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('match_type', models.CharField(choices=[('exact', 'Exact Match'), ('partial', 'Partial Match'), ('manual', 'Manual Match')], max_length=20)),
                ('confidence_score', models.FloatField(help_text='Confidence score of the match (0-1)')),
                ('date_difference_days', models.IntegerField(default=0)),
                ('amount_difference', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bank_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='reconciliation.bankrecord')),
                ('confirmed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_matches', to=settings.AUTH_USER_MODEL)),
                ('ledger_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='reconciliation.ledgerrecord')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='reconciliation.reconciliationsession')),
            ],
            options={
                'ordering': ['-confidence_score', 'created_at'],
                'indexes': [models.Index(fields=['session', 'confidence_score'], name='reconciliat_session_c3c2c5_idx'), models.Index(fields=['match_type'], name='reconciliat_match_t_d6358a_idx'), models.Index(fields=['is_confirmed'], name='reconciliat_is_conf_c0f365_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='reconciliationsession',
            index=models.Index(fields=['created_by', 'created_at'], name='reconciliat_created_e43417_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationsession',
            index=models.Index(fields=['status'], name='reconciliat_status_19fa70_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationexception',
            index=models.Index(fields=['session', 'status'], name='reconciliat_session_25cb1f_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationexception',
            index=models.Index(fields=['exception_type'], name='reconciliat_excepti_8f654f_idx'),
        ),
        migrations.AddIndex(
            model_name='reconciliationexception',
            index=models.Index(fields=['severity'], name='reconciliat_severit_091a8d_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgerrecord',
            index=models.Index(fields=['session', 'date'], name='reconciliat_session_a77646_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgerrecord',
            index=models.Index(fields=['session', 'is_matched'], name='reconciliat_session_2050c9_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgerrecord',
            index=models.Index(fields=['amount'], name='reconciliat_amount_642f90_idx'),
        ),
        migrations.AddIndex(
            model_name='bankrecord',
            index=models.Index(fields=['session', 'date'], name='reconciliat_session_b36fb2_idx'),
        ),
        migrations.AddIndex(
            model_name='bankrecord',
            index=models.Index(fields=['session', 'is_matched'], name='reconciliat_session_00bc00_idx'),
        ),
        migrations.AddIndex(
            model_name='bankrecord',
            index=models.Index(fields=['amount'], name='reconciliat_amount_7d25a2_idx'),
        ),
    ]
